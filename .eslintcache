[{"G:\\Task\\2021\\pedro\\projectjarvis\\src\\index.js":"1","G:\\Task\\2021\\pedro\\projectjarvis\\src\\App.js":"2","G:\\Task\\2021\\pedro\\projectjarvis\\src\\reportWebVitals.js":"3","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Pages\\Home\\Home.jsx":"4","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Pages\\About\\About.jsx":"5","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Pages\\SingleProject\\SingleProject.jsx":"6","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\Header\\Header.jsx":"7","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\NavItem\\NavItem.jsx":"8","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\Project\\Project.jsx":"9","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\MobileNavItem\\MobileNavItem.jsx":"10","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\AboutLeftNav\\AboutLeftNav.jsx":"11","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\AboutContent\\AboutContent.jsx":"12","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\ProjectPageHeader\\ProjectPageHeader.jsx":"13","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\MobileProject\\MobileProject.jsx":"14","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\ImageCarousel\\ImageCarousel.jsx":"15"},{"size":602,"mtime":1615314737458,"results":"16","hashOfConfig":"17"},{"size":546,"mtime":1615314737445,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1615314737459,"results":"19","hashOfConfig":"17"},{"size":4485,"mtime":1615521282039,"results":"20","hashOfConfig":"17"},{"size":3373,"mtime":1615409205716,"results":"21","hashOfConfig":"17"},{"size":1826,"mtime":1615368582140,"results":"22","hashOfConfig":"17"},{"size":2530,"mtime":1615367309460,"results":"23","hashOfConfig":"17"},{"size":1726,"mtime":1615368608453,"results":"24","hashOfConfig":"17"},{"size":2473,"mtime":1615491928892,"results":"25","hashOfConfig":"17"},{"size":1495,"mtime":1615367377013,"results":"26","hashOfConfig":"17"},{"size":1360,"mtime":1615314737446,"results":"27","hashOfConfig":"17"},{"size":705,"mtime":1615409159945,"results":"28","hashOfConfig":"17"},{"size":796,"mtime":1615314737456,"results":"29","hashOfConfig":"17"},{"size":2282,"mtime":1615491930096,"results":"30","hashOfConfig":"17"},{"size":1226,"mtime":1615385833752,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"fd3js1",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"G:\\Task\\2021\\pedro\\projectjarvis\\src\\index.js",[],["69","70"],"G:\\Task\\2021\\pedro\\projectjarvis\\src\\App.js",[],"G:\\Task\\2021\\pedro\\projectjarvis\\src\\reportWebVitals.js",[],"G:\\Task\\2021\\pedro\\projectjarvis\\src\\Pages\\Home\\Home.jsx",["71"],"G:\\Task\\2021\\pedro\\projectjarvis\\src\\Pages\\About\\About.jsx",["72"],"import React, { useEffect, useState } from \"react\";\r\nimport Header from \"../../Components/Header/Header\";\r\nimport \"./About.css\";\r\nimport Prismic from \"@prismicio/client\";\r\nimport AboutLeftNav from \"../../Components/AboutLeftNav/AboutLeftNav\";\r\nimport AboutContent from \"../../Components/AboutContent/AboutContent\";\r\nimport MobileNavItem from \"../../Components/MobileNavItem/MobileNavItem\"\r\n\r\n\r\nconst apiEndpoint = \"https://portfolio-pedro.cdn.prismic.io/api/v2\";\r\nconst accessToken =\r\n\t\"MC5ZQWM0NWhNQUFDWUFyN1RG.77-9O--_ve-_ve-_ve-_ve-_ve-_vQ3vv73vv73vv73vv73vv71Y77-9Be-_vSEBMe-_vU_vv73vv73vv71-bu-_ve-_ve-_vQQ\";\r\nconst client = Prismic.client(apiEndpoint, { accessToken });\r\n\r\nfunction About() {\r\n\tconst [currentUrl] = useState(\"/about\");\r\n\r\n\t// Fetching data from prismic\r\n\tconst [doc, setDocData] = useState(null);\r\n\tconst [aboutContent, setAboutContent] = useState(null);\r\n\tconst [contactIGLink, setcontactIGLink] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\t// Fetching projects\r\n\t\tconst fetchData = async () => {\r\n\t\t\tclient\r\n\t\t\t\t.query(Prismic.Predicates.at(\"document.type\", \"projects\"),\r\n\t\t\t\t\t{ orderings: '[my.projects.projectdates desc]' })\r\n\t\t\t\t.then(function (res) {\r\n\t\t\t\t\tsetDocData((prevState) => res.results);\r\n\t\t\t\t});\r\n\t\t\tclient\r\n\t\t\t\t.query(Prismic.Predicates.at(\"document.type\", \"about\"))\r\n\t\t\t\t.then(function (res) {\r\n\t\t\t\t\tconsole.log(res.results[0]);\r\n\t\t\t\t\tsetAboutContent((prevState) => res.results[0].data)\r\n\t\t\t\t});\r\n\t\t};\r\n\t\t// Fetching contact link\r\n\t\tconst fetchContactLink = async () => {\r\n\t\t\tclient.query(\r\n\t\t\t\tPrismic.Predicates.at('document.type', 'contactlink')\r\n\t\t\t).then(function (res) {\r\n\t\t\t\tsetcontactIGLink((prevState) => res.results[0].data)\r\n\t\t\t});\r\n\t\t}\r\n\t\tfetchContactLink()\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"about-container-wrapper\">\r\n\t\t\t<div className=\"about-container\">\r\n\t\t\t\t<div className=\"about-header\">\r\n\t\t\t\t\t<Header currentUrl={currentUrl} aboutPageFlag={true} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"about-left-nav\">\r\n\t\t\t\t\t<div className=\"about-left-nav-items\">\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdoc && doc.map((project) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<AboutLeftNav\r\n\t\t\t\t\t\t\t\t\t\tcurrentUrl={currentUrl}\r\n\t\t\t\t\t\t\t\t\t\tprojectName={\"Project1\"}\r\n\t\t\t\t\t\t\t\t\t\tproject={project.data}\r\n\t\t\t\t\t\t\t\t\t\tkey={project.id}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"about-left-nav-footer\">\r\n\t\t\t\t\t\t<a className=\"bg-white\" style={{ flex: \"1\" }} href='mailto:hi@pedrodamasceno.com' target=\"_blank\" rel=\"noreferrer\"><h1 className=\"f1-5 pointer contactz\" style={{ color: \"#8c8c8c\", fontSize: \"16px\" }}>Contact me</h1></a>\r\n\t\t\t\t\t\t<a className=\"bg-white flex-end\" style={{ flex: \"1\", paddingRight: \"2.5rem\" }} href='https://www.instagram.com/pedrose/' rel=\"noreferrer\" target=\"_blank\"><h1 className=\"f1-5 pointer IGz\" style={{ color: \"#8c8c8c\", fontSize: \"16px\" }}>IG</h1></a>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"about-content\">\r\n\t\t\t\t\t<div className=\"aboutContentDiv\">\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\taboutContent ?\r\n\t\t\t\t\t\t\t\t<AboutContent aboutContent={aboutContent} />\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"aboutMobileNav\">\r\n\t\t\t\t\t{doc ?\r\n\t\t\t\t\t\tdoc.map((project) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<MobileNavItem project={project.data} key={project.id} />\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\tnull\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default About;\r\n","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Pages\\SingleProject\\SingleProject.jsx",["73"],"import React, { useEffect, useState } from 'react'\r\nimport ProjectPageHeader from '../../Components/ProjectPageHeader/ProjectPageHeader'\r\nimport './SingleProject.css'\r\n// import ProjectPageHeader from \"../../Components/ProjectPageHeader/ProjectPageHeader\"\r\nimport Prismic from '@prismicio/client'\r\nimport MobileProject from \"../../Components/MobileProject/MobileProject\"\r\n\r\nconst apiEndpoint = 'https://portfolio-pedro.cdn.prismic.io/api/v2'\r\nconst accessToken = 'MC5ZQWM0NWhNQUFDWUFyN1RG.77-9O--_ve-_ve-_ve-_ve-_ve-_vQ3vv73vv73vv73vv73vv71Y77-9Be-_vSEBMe-_vU_vv73vv73vv71-bu-_ve-_ve-_vQQ'\r\nconst client = Prismic.client(apiEndpoint, { accessToken })\r\n\r\nfunction SingleProject(props) {\r\n    // Fetching data from prismic\r\n    const [doc, setDocData] = useState(null)\r\n    useEffect(() => {\r\n        const selectedProject = props.match.params.uid\r\n        // Fetching projects\r\n        const fetchData = async () => {\r\n            client.query(\r\n                Prismic.Predicates.at('document.type', 'projects')\r\n            ).then(function (res) {\r\n                res.results.forEach(project => {\r\n                    if(project.data.title[0].text.toLowerCase()===selectedProject.toLowerCase())       \r\n                    {\r\n                        setDocData((prevState) => project)\r\n                    }             \r\n                });\r\n            });\r\n        }\r\n        fetchData()\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"singleproject-page-wrappper\">\r\n            <div className=\"singleproject-header\">\r\n                <ProjectPageHeader />\r\n            </div>\r\n            <div className=\"singleproject-Content\">\r\n                {\r\n                    doc && <MobileProject project={doc.data} />\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleProject\r\n","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\Header\\Header.jsx",["74","75","76"],"import * as Scroll from \"react-scroll\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./Header.css\";\r\nimport { goToTop } from \"react-update-url-on-scroll\";\r\n// import { Link } from 'react-router-dom'\r\nimport { Link } from \"react-scroll\";\r\nimport { Link as RouteLink, withRouter}  from \"react-router-dom\";\r\n\r\nfunction Header(props) {\r\n  // for chaning name color \r\n  const mediaMatch = window.matchMedia('(max-width: 850px)');\r\n  const [nameColor, setnameColor] = useState(\"blue\");\r\n\r\n  const [activeState, setactiveState] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if(window.scrollY===0)\r\n      setnameColor(\"blue\");\r\n    else\r\n      setnameColor(\"black\");\r\n  }, [window.scrollY]);\r\n  const handleSetActive = () =>{\r\n    setactiveState(true)\r\n    setnameColor(\"blue\");\r\n    // goToTop()\r\n  }\r\n  const handleSetInactive = () =>{\r\n    setactiveState(false)\r\n    setnameColor(\"black\");\r\n  }\r\n  return (\r\n    <div className=\"header-container-wrapper flex-col-end\" id=\"\">\r\n      <div className=\"header-container\">\r\n        <Link\r\n          to=\"\"\r\n          onSetActive={handleSetActive}\r\n          onSetInactive={handleSetInactive}\r\n          onClick={()=>{\r\n            goToTop();\r\n          }}\r\n        >\r\n          <div\r\n            className=\"name fb pointer\"\r\n            style={{ color: `${nameColor}` }}\r\n            onClick={() => {\r\n              props.history.push(\"/\");\r\n            }}\r\n          >\r\n            {\r\n              props.aboutPageFlag && mediaMatch.matches?\r\n              <span style={{color:\"#8c8c8c\", fontWeight:\"400\"}}>\r\n              <i className=\"f1-3 fas fa-arrow-left\"></i> Pedro Damasceno\r\n              </span>\r\n              :\r\n              props.aboutPageFlag && !mediaMatch.matches ?\r\n              <span style={{color:\"black\", fontWeight:\"700\"}}>\r\n              Pedro Damasceno\r\n              {/* <i className=\"f1-3 fas fa-arrow-left\"></i> Pedro Damasceno */}\r\n              </span>\r\n              :\r\n              <span>\r\n              Pedro Damasceno\r\n              </span>\r\n            }\r\n          </div>\r\n        </Link>\r\n        {\r\n          props.aboutPageFlag ?\r\n            props.aboutPageFlag && mediaMatch.matches ?\r\n            null\r\n            :\r\n            <div className=\"initiative\">Initiative</div>\r\n          :\r\n          <div className=\"initiative\">Initiative</div>\r\n\r\n        }\r\n        <RouteLink to=\"/about\">\r\n          <div className=\"about\">About</div>\r\n        </RouteLink>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Header);\r\n","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\NavItem\\NavItem.jsx",["77","78"],"import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./NavItem.css\";\r\nimport { Link } from 'react-scroll'\r\n\r\n// General scroll to element function\r\nfunction NavItem(props) {\r\n\tconst [itemColor, setitemColor] = useState(\"black\");\r\n\tconst [navDes, setnavDes] = useState(\"\");\r\n\tconst [projectDates, setprojectDates] = useState(\"\");\r\n\tconst [activeState, setactiveState] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\t// Setting date\r\n\t\tvar d = new Date(props.project.timestamp);\r\n\t\tsetprojectDates(() => (d.getMonth() + 1) + '.' + d.getFullYear())\r\n\r\n\t\tvar localnavdes = \"\"\r\n\t\tfor (let i = 0; i < 120; i++) {\r\n\t\t\tif (props.project.navbardescription[0].text[i] === undefined)\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tlocalnavdes += props.project.navbardescription[0].text[i]\r\n\t\t}\r\n\t\tsetnavDes(() => `${localnavdes}...`)\r\n\t\treturn () => { };\r\n\t}, [props.currentUrl]);\r\n\tconst handleSetActive = () => {\r\n\t\tsetactiveState(true)\r\n\t\tsetitemColor(\"blue\");\r\n\t}\r\n\tconst handleSetInactive = () => {\r\n\t\tsetactiveState(false)\r\n\t\tsetitemColor(\"black\");\r\n\t}\r\n\treturn (\r\n\t\t<Link to={`${props.project.title[0].text}`} smooth={true} offset={-90} hashSpy={true} spy={true} activeClass=\"active\"\r\n\t\t\tonSetActive={handleSetActive}\r\n\t\t\tonSetInactive={handleSetInactive}>\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"nav-item-container-wrapper flex-col pointer\"\r\n\t\t\t\tstyle={{ color: `${itemColor}` }}\r\n\t\t\t>\r\n\t\t\t\t<h2 className=\"f1-5 item-heading\">\r\n\t\t\t\t\t<span style={{ flex: \"4\" }}>{props.project.title[0].text}</span>\r\n\t\t\t\t\t<span className=\"item-date flex-end\" style={{ flex: \"1\" }}>{projectDates}</span>\r\n\t\t\t\t</h2>\r\n\t\t\t\t<p className=\"item-para\">\r\n\t\t\t\t\t{navDes}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</Link>\r\n\t);\r\n}\r\n\r\nexport default withRouter(NavItem);\r\n","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\Project\\Project.jsx",["79","80","81","82"],"G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\MobileNavItem\\MobileNavItem.jsx",["83"],"import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./MobileNavItem.css\";\r\n\r\nconst MobileNavItem = (props) => {\r\n    const [projectDates, setprojectDates] = useState(\"\");\r\n    const [navDes, setnavDes] = useState(\"\");\r\n  \r\n    useEffect(() => {\r\n      // Setting date\r\n      var d = new Date(props.project.timestamp);\r\n      setprojectDates(() => d.getMonth() + 1 + \".\" + d.getFullYear());\r\n      var localnavdes=\"\"\r\n      for(let i =0 ;i<120;i++)\r\n      {\r\n        if(props.project.navbardescription[0].text[i]===undefined)\r\n          break;\r\n          \r\n          localnavdes+=props.project.navbardescription[0].text[i]\r\n      }\r\n      setnavDes(()=>`${localnavdes}...`)\r\n      return () => {};\r\n    }, []);\r\n    const handleRedirection = (route) =>{\r\n      props.history.push(`/projects/${route}`)\r\n    }    \r\n    return (\r\n        <div className=\"mobile-nav-item-container-wrapper flex-col pointer\" onClick={(e)=>{handleRedirection(props.project.title[0].text)}}>\r\n        <h2 className=\"f1-5 mobile-item-heading\">\r\n          <span style={{ flex: \"5\" }}>{props.project.title[0].text}</span>\r\n          <span style={{ flex: \"1\" }} className=\"mobile-item-date flex-end\">{projectDates}</span>\r\n        </h2>\r\n        <p className=\"mobile-item-para\">\r\n        {navDes}\r\n        </p>\r\n        {/* <h2 className=\"item-date f1-5 fb\">{props.project.projectdates}</h2> */}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(MobileNavItem)\r\n","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\AboutLeftNav\\AboutLeftNav.jsx",["84"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./AboutLeftNav.css\";\r\nimport {withRouter} from 'react-router-dom'\r\nfunction AboutLeftNav(props) {\r\n  const [projectDates, setprojectDates] = useState(\"\");\r\n  const [navDes, setnavDes] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // Setting date\r\n    var d = new Date(props.project.timestamp);\r\n    setprojectDates((prevState) => d.getMonth() + 1 + \".\" + d.getFullYear());\r\n    var localnavdes=\"\"\r\n    for(let i =0 ;i<110;i++)\r\n    {\r\n      if(props.project.navbardescription[0].text[i]===undefined)\r\n      break;\r\n      \r\n      localnavdes+=props.project.navbardescription[0].text[i]\r\n    }\r\n    setnavDes((prevState)=>`${localnavdes}...`)\r\n    return () => {};\r\n  }, []);\r\n  const navigate = (projectRoute) => {\r\n      // props.history.push(`/`)\r\n      window.location.href = `/#${projectRoute}`;\r\n  }\r\n  return (\r\n    <div className=\"about-nav-item-container-wrapper flex-col pointer\" onClick={(e)=>{navigate(props.project.title[0].text)}}>\r\n      <h2 className=\"f1-5 about-item-heading\">\r\n        <span style={{ flex: \"5\" }}>{props.project.title[0].text}</span>\r\n        <span className=\"item-date flex-end\"style={{ flex: \"1\" }}>{projectDates}</span>\r\n      </h2>\r\n      <p className=\"about-item-para\">\r\n      {navDes}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(AboutLeftNav);\r\n","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\AboutContent\\AboutContent.jsx",[],"G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\ProjectPageHeader\\ProjectPageHeader.jsx",[],"G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\MobileProject\\MobileProject.jsx",["85","86","87","88"],"G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\ImageCarousel\\ImageCarousel.jsx",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":31,"column":5,"nodeType":"95","endLine":31,"endColumn":27,"suggestions":"96"},{"ruleId":"97","severity":1,"message":"98","line":21,"column":9,"nodeType":"99","messageId":"100","endLine":21,"endColumn":22},{"ruleId":"93","severity":1,"message":"101","line":32,"column":8,"nodeType":"95","endLine":32,"endColumn":10,"suggestions":"102"},{"ruleId":"97","severity":1,"message":"103","line":1,"column":13,"nodeType":"99","messageId":"100","endLine":1,"endColumn":19},{"ruleId":"97","severity":1,"message":"104","line":14,"column":10,"nodeType":"99","messageId":"100","endLine":14,"endColumn":21},{"ruleId":"93","severity":1,"message":"105","line":21,"column":6,"nodeType":"95","endLine":21,"endColumn":22,"suggestions":"106"},{"ruleId":"97","severity":1,"message":"104","line":11,"column":9,"nodeType":"99","messageId":"100","endLine":11,"endColumn":20},{"ruleId":"93","severity":1,"message":"107","line":27,"column":5,"nodeType":"95","endLine":27,"endColumn":23,"suggestions":"108"},{"ruleId":"93","severity":1,"message":"109","line":25,"column":5,"nodeType":"95","endLine":25,"endColumn":23,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":61,"column":11,"nodeType":"113","endLine":61,"endColumn":61},{"ruleId":"111","severity":1,"message":"112","line":62,"column":11,"nodeType":"113","endLine":62,"endColumn":68},{"ruleId":"111","severity":1,"message":"112","line":63,"column":11,"nodeType":"113","endLine":63,"endColumn":67},{"ruleId":"93","severity":1,"message":"107","line":23,"column":8,"nodeType":"95","endLine":23,"endColumn":10,"suggestions":"114"},{"ruleId":"93","severity":1,"message":"107","line":22,"column":6,"nodeType":"95","endLine":22,"endColumn":8,"suggestions":"115"},{"ruleId":"93","severity":1,"message":"109","line":19,"column":5,"nodeType":"95","endLine":19,"endColumn":23,"suggestions":"116"},{"ruleId":"111","severity":1,"message":"112","line":43,"column":10,"nodeType":"113","endLine":43,"endColumn":60},{"ruleId":"111","severity":1,"message":"112","line":44,"column":10,"nodeType":"113","endLine":44,"endColumn":67},{"ruleId":"111","severity":1,"message":"112","line":45,"column":10,"nodeType":"113","endLine":45,"endColumn":66},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'window.location.hash'. Either exclude it or remove the dependency array. Outer scope values like 'window.location.hash' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["119"],"no-unused-vars","'contactIGLink' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'props.match.params.uid'. Either include it or remove the dependency array.",["120"],"'Scroll' is defined but never used.","'activeState' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'window.scrollY'. Either exclude it or remove the dependency array. Outer scope values like 'window.scrollY' aren't valid dependencies because mutating them doesn't re-render the component.",["121"],"React Hook useEffect has missing dependencies: 'props.project.navbardescription' and 'props.project.timestamp'. Either include them or remove the dependency array.",["122"],"React Hook useEffect has missing dependencies: 'props.project.timestamp' and 'props.project.title'. Either include them or remove the dependency array.",["123"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["124"],["125"],["126"],"no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"127","fix":"131"},{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"136","fix":"138"},{"desc":"134","fix":"139"},"Update the dependencies array to be: []",{"range":"140","text":"141"},"Update the dependencies array to be: [props.match.params.uid]",{"range":"142","text":"143"},{"range":"144","text":"141"},"Update the dependencies array to be: [props.currentUrl, props.project.navbardescription, props.project.timestamp]",{"range":"145","text":"146"},"Update the dependencies array to be: [props.currentUrl, props.project.timestamp, props.project.title]",{"range":"147","text":"148"},"Update the dependencies array to be: [props.project.navbardescription, props.project.timestamp]",{"range":"149","text":"150"},{"range":"151","text":"150"},{"range":"152","text":"148"},[1071,1093],"[]",[1403,1405],"[props.match.params.uid]",[683,699],[872,890],"[props.currentUrl, props.project.navbardescription, props.project.timestamp]",[754,772],"[props.currentUrl, props.project.timestamp, props.project.title]",[762,764],"[props.project.navbardescription, props.project.timestamp]",[728,730],[727,745]]