[{"G:\\Task\\2021\\pedro\\projectjarvis\\src\\index.js":"1","G:\\Task\\2021\\pedro\\projectjarvis\\src\\App.js":"2","G:\\Task\\2021\\pedro\\projectjarvis\\src\\reportWebVitals.js":"3","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Pages\\Home\\Home.jsx":"4","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Pages\\About\\About.jsx":"5","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Pages\\SingleProject\\SingleProject.jsx":"6","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\Header\\Header.jsx":"7","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\NavItem\\NavItem.jsx":"8","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\Project\\Project.jsx":"9","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\MobileNavItem\\MobileNavItem.jsx":"10","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\AboutLeftNav\\AboutLeftNav.jsx":"11","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\AboutContent\\AboutContent.jsx":"12","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\ProjectPageHeader\\ProjectPageHeader.jsx":"13","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\MobileProject\\MobileProject.jsx":"14","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\ImageCarousel\\ImageCarousel.jsx":"15"},{"size":602,"mtime":1615314737458,"results":"16","hashOfConfig":"17"},{"size":546,"mtime":1615314737445,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1615314737459,"results":"19","hashOfConfig":"17"},{"size":5072,"mtime":1615344068353,"results":"20","hashOfConfig":"17"},{"size":4044,"mtime":1615314737457,"results":"21","hashOfConfig":"17"},{"size":2160,"mtime":1615316161986,"results":"22","hashOfConfig":"17"},{"size":2744,"mtime":1615314737447,"results":"23","hashOfConfig":"17"},{"size":2212,"mtime":1615314737452,"results":"24","hashOfConfig":"17"},{"size":3230,"mtime":1615364166695,"results":"25","hashOfConfig":"17"},{"size":1513,"mtime":1615314737451,"results":"26","hashOfConfig":"17"},{"size":1360,"mtime":1615314737446,"results":"27","hashOfConfig":"17"},{"size":1293,"mtime":1615316304770,"results":"28","hashOfConfig":"17"},{"size":796,"mtime":1615314737456,"results":"29","hashOfConfig":"17"},{"size":2650,"mtime":1615314737451,"results":"30","hashOfConfig":"17"},{"size":2245,"mtime":1615316239212,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"h3uzco",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"34"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"34"},"G:\\Task\\2021\\pedro\\projectjarvis\\src\\index.js",[],["73","74"],"G:\\Task\\2021\\pedro\\projectjarvis\\src\\App.js",[],"G:\\Task\\2021\\pedro\\projectjarvis\\src\\reportWebVitals.js",[],"G:\\Task\\2021\\pedro\\projectjarvis\\src\\Pages\\Home\\Home.jsx",["75","76","77","78","79","80","81"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Home.css\";\r\nimport Header from \"../../Components/Header/Header\";\r\nimport NavItem from \"../../Components/NavItem/NavItem\";\r\nimport Project from \"../../Components/Project/Project\";\r\n\r\nimport Prismic from '@prismicio/client'\r\nimport MobileNavItem from \"../../Components/MobileNavItem/MobileNavItem\";\r\n\r\nconst apiEndpoint = 'https://portfolio-pedro.cdn.prismic.io/api/v2'\r\nconst accessToken = 'MC5ZQWM0NWhNQUFDWUFyN1RG.77-9O--_ve-_ve-_ve-_ve-_ve-_vQ3vv73vv73vv73vv73vv71Y77-9Be-_vSEBMe-_vU_vv73vv73vv71-bu-_ve-_ve-_vQQ'\r\nconst client = Prismic.client(apiEndpoint, { accessToken }); \r\n\r\nfunction Home(props) {\r\n  const [currentUrl, setcurrentUrl] = useState('/')\r\n  const [contactIGLink, setcontactIGLink] = useState(null);\r\n\r\n  useEffect(() => {\r\n    window.matchMedia(\"(min-width:850px)\")\r\n    {\r\n      window.addEventListener(\"scroll\", listenScrollEvent);\r\n    }\r\n\r\n    return () => {\r\n      // cleanup\r\n    }\r\n  }, [])\r\n  useEffect(() => {\r\n    window.matchMedia(\"(min-width:850px)\")\r\n    {\r\n      listenScrollEvent()\r\n    }\r\n\r\n    return () => {\r\n      // cleanup\r\n    }\r\n  }, [window.location.hash])\r\n\r\n  // Fetching data from prismic\r\n  const [doc, setDocData] = useState([]); \r\n\r\n  useEffect(() => {\r\n    // Fetching projects\r\n    const fetchData = async () => {\r\n      await client.query(\r\n        Prismic.Predicates.at('document.type', 'projects'),\r\n        // Sort DocData in ascending order based on projectDate\r\n        { orderings : '[my.projects.projectdates]' }\r\n      ).then(function (res) {\r\n        setDocData((prevState) => res.results);\r\n      });\r\n    }; \r\n    fetchData();\r\n\r\n    // Fetching contact link\r\n    const fetchContactLink = async () => {\r\n      client.query(\r\n        Prismic.Predicates.at('document.type', 'contactlink')\r\n      ).then(function (res) {\r\n        setcontactIGLink((prevState) => res.results[0].data)\r\n      });\r\n    };\r\n    fetchContactLink();\r\n  }, [])\r\n\r\n  const listenScrollEvent = () => {\r\n    const withoutHash = window.location.hash.replaceAll(\"#\",\"\")\r\n    setcurrentUrl((prevState) => withoutHash.replaceAll(\"%20\",\" \"))\r\n  }\r\n\r\n  return (\r\n    <div className=\"home-wrapper-container\">\r\n      <div className=\"home-container\">\r\n\r\n        <div className=\"header\" style={{ zIndex: \"2\" }}>\r\n          <Header currentUrl={currentUrl} />\r\n        </div>\r\n\r\n      {/* Mobile Nav */}\r\n      <div className=\"mobileNav\">\r\n        <div className=\"mobile-nav-items\">\r\n        {\r\n          \r\n          doc ?\r\n          doc.map((project) => {\r\n            return (\r\n              <MobileNavItem project={project.data} key={project.id} />\r\n            )\r\n          })\r\n          :\r\n          null\r\n      \r\n        }\r\n        </div>\r\n\r\n        <div className=\"mobile-nav-footer bg-blue\">\r\n        {\r\n              contactIGLink ?\r\n                <a className=\"bg-white\" style={{flex:\"1\"}} href='mailto:hi@pedrodamasceno.com' target=\"_blank\"><h1 className=\"pointer bg-white\" style={{ color: \"#8c8c8c\",fontSize:\"16px\"}}>Contact me</h1></a>\r\n                :\r\n                null\r\n            }\r\n            {\r\n              contactIGLink ?\r\n                <a className=\"bg-white flex-col-start\" style={{flex:\"1\",alignItems:\"flex-end\"}} href='https://www.instagram.com/pedrose/' target=\"_blank\"><h1 className=\"pointer bg-white\" style={{ color: \"#8c8c8c\",fontSize:\"16px\"}}>IG</h1></a>\r\n                :\r\n                null\r\n            }\r\n        </div>\r\n      </div>\r\n      {/* Desktop Nav */}\r\n        <div className=\"left-nav\">\r\n          <div className=\"left-nav-items\">\r\n            {\r\n              doc ?\r\n              doc.map((project) => {\r\n                  return (\r\n                    <NavItem currentUrl={currentUrl} projectName={\"Project1\"} project={project.data} key={project.id} />\r\n                  )\r\n                })\r\n                :\r\n                null\r\n            }\r\n          </div>\r\n          <div className=\"left-nav-footer bg-white\">\r\n            {\r\n              contactIGLink ?\r\n                <a className=\"bg-white\" style={{flex:\"1\"}} href='mailto:hi@pedrodamasceno.com' target=\"_blank\"><h1 className=\"pointer bg-white contactMe\" style={{ color: \"#8c8c8c\",fontSize:\"16px\"}}>Contact me</h1></a>\r\n                :\r\n                null\r\n            }\r\n            {\r\n              contactIGLink ?\r\n                <a className=\"bg-white flex-end\" style={{flex:\"1\",paddingRight:\"2.5rem\"}} href='https://www.instagram.com/pedrose/' target=\"_blank\"><h1 className=\"pointer bg-white instagram\" style={{ color: \"#8c8c8c\",fontSize:\"16px\"}}>IG</h1></a>\r\n                :\r\n                null\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className=\"projectsContent\" >\r\n          {\r\n            doc ?\r\n            doc.map((project) => {\r\n                return (\r\n                  <Project key={project.id} currentUrl={currentUrl}  project={project.data} />\r\n                )\r\n              })\r\n              :\r\n              null\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n\r\n","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Pages\\About\\About.jsx",["82","83","84","85","86","87","88"],"import React, { useEffect, useState } from \"react\";\r\nimport Header from \"../../Components/Header/Header\";\r\nimport \"./About.css\";\r\nimport Prismic from \"@prismicio/client\";\r\nimport { Date, Link, RichText } from \"prismic-reactjs\";\r\nimport AboutLeftNav from \"../../Components/AboutLeftNav/AboutLeftNav\";\r\nimport AboutContent from \"../../Components/AboutContent/AboutContent\";\r\nimport MobileNavItem from \"../../Components/MobileNavItem/MobileNavItem\"\r\n\r\n\r\nconst apiEndpoint = \"https://portfolio-pedro.cdn.prismic.io/api/v2\";\r\nconst accessToken =\r\n  \"MC5ZQWM0NWhNQUFDWUFyN1RG.77-9O--_ve-_ve-_ve-_ve-_ve-_vQ3vv73vv73vv73vv73vv71Y77-9Be-_vSEBMe-_vU_vv73vv73vv71-bu-_ve-_ve-_vQQ\";\r\nconst client = Prismic.client(apiEndpoint, { accessToken });\r\n\r\nfunction About() {\r\n  const [currentUrl, setcurrentUrl] = useState(\"/about\");\r\n\r\n  // Fetching data from prismic\r\n  const [doc, setDocData] = useState(null);\r\n  const [aboutContent, setAboutContent] = useState(null);\r\n  const [contactIGLink, setcontactIGLink] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetching projects\r\n    const fetchData = async () => {\r\n      client\r\n        .query(Prismic.Predicates.at(\"document.type\", \"projects\"),\r\n        { orderings : '[my.projects.projectdates]' })\r\n        .then(function (res) {\r\n          setDocData((prevState) => res.results);\r\n        });\r\n      client\r\n        .query(Prismic.Predicates.at(\"document.type\", \"about\"))\r\n        .then(function (res) {\r\n          setAboutContent((prevState) => res.results[0].data)\r\n          //   setDocData((prevState) => res.results[0].data.aboutdescription);\r\n        });\r\n\r\n\r\n      // client.query(Prismic.Predicates.at(\"document.type\", \"projects\"))\r\n      // .then(function (res) {\r\n      //     setAboutContent((prevState) => res.results);\r\n      //   console.log(aboutContent)\r\n\r\n      // });\r\n    };\r\n    // Fetching contact link\r\n    const fetchContactLink = async () => {\r\n      client.query(\r\n        Prismic.Predicates.at('document.type', 'contactlink')\r\n      ).then(function (res) {\r\n        setcontactIGLink((prevState) => res.results[0].data)\r\n      });\r\n    }\r\n    fetchContactLink()\r\n    fetchData();\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"about-container-wrapper\">\r\n      <div className=\"about-container\">\r\n\r\n        \r\n        <div className=\"about-header\">\r\n          <Header currentUrl={currentUrl} aboutPageFlag={true}/>\r\n        </div>\r\n        <div className=\"about-left-nav\">\r\n          <div className=\"about-left-nav-items\">\r\n            {doc\r\n              ? doc.map((project, index) => {\r\n                return (\r\n                  <AboutLeftNav\r\n                    currentUrl={currentUrl}\r\n                    projectName={\"Project1\"}\r\n                    project={project.data}\r\n                    key={index}\r\n                  />\r\n                );\r\n              })\r\n              : null}\r\n          </div>\r\n\r\n          <div className=\"about-left-nav-footer\">\r\n                <a className=\"bg-white\" style={{flex:\"1\"}} href='mailto:hi@pedrodamasceno.com' target=\"_blank\"><h1 className=\"f1-5 pointer contactz\" style={{ color: \"#8c8c8c\",fontSize:\"16px\" }}>Contact me</h1></a>\r\n                <a className=\"bg-white flex-end\" style={{flex:\"1\",paddingRight:\"2.5rem\"}} href='https://www.instagram.com/pedrose/' target=\"_blank\"><h1 className=\"f1-5 pointer IGz\" style={{ color: \"#8c8c8c\",fontSize:\"16px\"}}>IG</h1></a>\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"about-content\">\r\n          <div className=\"aboutContentDiv\">\r\n            {\r\n              aboutContent ?\r\n                <AboutContent aboutContent={aboutContent} />\r\n                :\r\n                null\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"aboutMobileNav\">\r\n        {doc ?\r\n          doc.map((project, index) => {\r\n            return (\r\n              <MobileNavItem project={project.data} />\r\n            )\r\n          })\r\n          :\r\n          null\r\n      \r\n        }\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Pages\\SingleProject\\SingleProject.jsx",["89","90","91","92","93","94","95","96"],"import React, { useEffect, useState } from 'react'\r\nimport Project from '../../Components/Project/Project'\r\nimport ProjectPageHeader from '../../Components/ProjectPageHeader/ProjectPageHeader'\r\nimport './SingleProject.css'\r\n// import ProjectPageHeader from \"../../Components/ProjectPageHeader/ProjectPageHeader\"\r\nimport Prismic from '@prismicio/client'\r\nimport { Date, Link, RichText } from 'prismic-reactjs'\r\nimport MobileNavItem from \"../../Components/MobileNavItem/MobileNavItem\";\r\nimport MobileProject from \"../../Components/MobileProject/MobileProject\"\r\n\r\nconst apiEndpoint = 'https://portfolio-pedro.cdn.prismic.io/api/v2'\r\nconst accessToken = 'MC5ZQWM0NWhNQUFDWUFyN1RG.77-9O--_ve-_ve-_ve-_ve-_ve-_vQ3vv73vv73vv73vv73vv71Y77-9Be-_vSEBMe-_vU_vv73vv73vv71-bu-_ve-_ve-_vQQ'\r\nconst client = Prismic.client(apiEndpoint, { accessToken })\r\n\r\nfunction SingleProject(props) {\r\n    const [currentUrl, setcurrentUrl] = useState('/')\r\n    // Fetching data from prismic\r\n    const [doc, setDocData] = useState(null)\r\n    useEffect(() => {\r\n        const selectedProject = props.match.params.uid\r\n        // Fetching projects\r\n        const fetchData = async () => {\r\n            client.query(\r\n                Prismic.Predicates.at('document.type', 'projects')\r\n            ).then(function (res) {\r\n                res.results.forEach(project => {\r\n                    if(project.data.title[0].text.toLowerCase()===selectedProject.toLowerCase())       \r\n                    {\r\n                        setDocData((prevState) => project)\r\n                    }             \r\n                });\r\n            });\r\n        }\r\n        fetchData()\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"singleproject-page-wrappper\">\r\n            <div className=\"singleproject-header\">\r\n                <ProjectPageHeader />\r\n            </div>\r\n            <div className=\"singleproject-Content\">\r\n                {\r\n                    doc ? \r\n                    <MobileProject project={doc.data} />\r\n                    \r\n                    :\r\n                    null\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleProject\r\n","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\Header\\Header.jsx",["97","98","99"],"import * as Scroll from \"react-scroll\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./Header.css\";\r\nimport { goToTop } from \"react-update-url-on-scroll\";\r\n// import { Link } from 'react-router-dom'\r\nimport { Link } from \"react-scroll\";\r\nimport { Link as RouteLink, withRouter}  from \"react-router-dom\";\r\nvar scroll = Scroll.animateScroll;\r\n\r\nfunction Header(props) {\r\n  // for chaning name color \r\n  const mediaMatch = window.matchMedia('(max-width: 850px)');\r\n  const [nameColor, setnameColor] = useState(\"blue\");\r\n\r\n  const [activeState, setactiveState] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if(window.scrollY===0)\r\n    setnameColor(\"blue\");\r\n    else\r\n    setnameColor(\"black\");\r\n    // console.log(window.pageXOffset)\r\n    // if (props.currentUrl === `/`) setnameColor(\"blue\");\r\n    // else setnameColor(\"black\");\r\n    return () => {\r\n      // cleanup\r\n    };\r\n  }, [window.scrollY]);\r\n  const handleSetActive = () =>{\r\n    setactiveState(true)\r\n    setnameColor(\"blue\");\r\n    // goToTop()\r\n  }\r\n  const handleSetInactive = () =>{\r\n    setactiveState(false)\r\n    setnameColor(\"black\");\r\n  }\r\n  return (\r\n    <div className=\"header-container-wrapper flex-col-end\" id=\"\">\r\n      <div className=\"header-container\">\r\n        <Link\r\n          to=\"\"\r\n          onSetActive={handleSetActive}\r\n          onSetInactive={handleSetInactive}\r\n          onClick={()=>{\r\n            goToTop();\r\n          }}\r\n        >\r\n          <div\r\n            className=\"name fb pointer\"\r\n            style={{ color: `${nameColor}` }}\r\n            onClick={() => {\r\n              props.history.push(\"/\");\r\n            }}\r\n          >\r\n            {\r\n              props.aboutPageFlag && mediaMatch.matches?\r\n              <span style={{color:\"#8c8c8c\", fontWeight:\"400\"}}>\r\n              <i className=\"f1-3 fas fa-arrow-left\"></i> Pedro Damasceno\r\n              </span>\r\n              :\r\n              props.aboutPageFlag && !mediaMatch.matches ?\r\n              <span style={{color:\"black\", fontWeight:\"700\"}}>\r\n              Pedro Damasceno\r\n              {/* <i className=\"f1-3 fas fa-arrow-left\"></i> Pedro Damasceno */}\r\n              </span>\r\n              :\r\n              <span>\r\n              Pedro Damasceno\r\n              </span>\r\n            }\r\n          </div>\r\n        </Link>\r\n        {\r\n          props.aboutPageFlag ?\r\n            props.aboutPageFlag && mediaMatch.matches ?\r\n            null\r\n            :\r\n            <div className=\"initiative\">Initiative</div>\r\n          :\r\n          <div className=\"initiative\">Initiative</div>\r\n\r\n        }\r\n        <RouteLink to=\"/about\">\r\n          <div className=\"about\">About</div>\r\n        </RouteLink>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Header);\r\n","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\NavItem\\NavItem.jsx",["100","101","102","103","104"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport {withRouter } from \"react-router-dom\";\r\nimport ScrollableSection, { ScrollableLink } from \"react-update-url-on-scroll\";\r\nimport \"./NavItem.css\";\r\nimport {Link} from 'react-scroll'\r\n\r\nconst scrollToRef = (ref) => window.scrollTo(0, ref.current.offsetTop)   \r\n// General scroll to element function\r\nfunction NavItem(props) {\r\n  const myRef = useRef(null)\r\n  const executeScroll = () => scrollToRef(myRef)\r\n\r\n  const [itemColor, setitemColor] = useState(\"black\");\r\n  const [navDes, setnavDes] = useState(\"\");\r\n  const [projectDates, setprojectDates] = useState(\"\");\r\n  const [activeState, setactiveState] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    // Setting date\r\n    var d = new Date(props.project.timestamp);\r\n    setprojectDates((prevState)=>(d.getMonth()+1) + '.' + d.getFullYear())\r\n\r\n    var localnavdes=\"\"\r\n    for(let i =0 ;i<120;i++)\r\n    {\r\n      if(props.project.navbardescription[0].text[i]===undefined)\r\n      break;\r\n      \r\n      localnavdes+=props.project.navbardescription[0].text[i]\r\n    }\r\n    setnavDes((prevState)=>`${localnavdes}...`)\r\n    // if (props.currentUrl === `${props.project.title[0].text}`)\r\n      // setitemColor(\"blue\");\r\n    // else setitemColor(\"black\");\r\n    return () => {};\r\n  }, [props.currentUrl]);\r\n  const handleSetActive = () =>{\r\n    setactiveState(true)\r\n    setitemColor(\"blue\");\r\n  }\r\n  const handleSetInactive = () =>{\r\n    setactiveState(false)\r\n    setitemColor(\"black\");\r\n  }\r\n  return (\r\n    <Link to={`${props.project.title[0].text}`} smooth={true} offset={-90} hashSpy={true} spy={true} activeClass=\"active\"\r\n    onSetActive={handleSetActive}\r\n    onSetInactive={handleSetInactive}>\r\n      <div\r\n        className=\"nav-item-container-wrapper flex-col pointer\"\r\n        style={{ color: `${itemColor}` }}\r\n      >\r\n        <h2 className=\"f1-5 item-heading\">\r\n          <span style={{ flex: \"4\"}}>{props.project.title[0].text}</span>\r\n          <span className=\"item-date flex-end\" style={{ flex: \"1\"}}>{projectDates}</span>\r\n        </h2>\r\n        <p className=\"item-para\">\r\n          {navDes}\r\n        </p>\r\n      </div>\r\n      </Link>\r\n  );\r\n}\r\n\r\nexport default withRouter(NavItem);\r\n","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\Project\\Project.jsx",["105","106","107","108","109","110","111","112"],"G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\MobileNavItem\\MobileNavItem.jsx",["113"],"import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./MobileNavItem.css\";\r\n\r\nconst MobileNavItem = (props) => {\r\n    const [projectDates, setprojectDates] = useState(\"\");\r\n    const [navDes, setnavDes] = useState(\"\");\r\n  \r\n    useEffect(() => {\r\n      // Setting date\r\n      var d = new Date(props.project.timestamp);\r\n      setprojectDates((prevState) => d.getMonth() + 1 + \".\" + d.getFullYear());\r\n      var localnavdes=\"\"\r\n      for(let i =0 ;i<120;i++)\r\n      {\r\n        if(props.project.navbardescription[0].text[i]===undefined)\r\n          break;\r\n          \r\n          localnavdes+=props.project.navbardescription[0].text[i]\r\n      }\r\n      setnavDes((prevState)=>`${localnavdes}...`)\r\n      return () => {};\r\n    }, []);\r\n    const handleRedirection = (route) =>{\r\n      props.history.push(`/projects/${route}`)\r\n    }    \r\n    return (\r\n        <div className=\"mobile-nav-item-container-wrapper flex-col pointer\" onClick={(e)=>{handleRedirection(props.project.title[0].text)}}>\r\n        <h2 className=\"f1-5 mobile-item-heading\">\r\n          <span style={{ flex: \"5\" }}>{props.project.title[0].text}</span>\r\n          <span style={{ flex: \"1\" }} className=\"mobile-item-date flex-end\">{projectDates}</span>\r\n        </h2>\r\n        <p className=\"mobile-item-para\">\r\n        {navDes}\r\n        </p>\r\n        {/* <h2 className=\"item-date f1-5 fb\">{props.project.projectdates}</h2> */}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(MobileNavItem)\r\n","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\AboutLeftNav\\AboutLeftNav.jsx",["114"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./AboutLeftNav.css\";\r\nimport {withRouter} from 'react-router-dom'\r\nfunction AboutLeftNav(props) {\r\n  const [projectDates, setprojectDates] = useState(\"\");\r\n  const [navDes, setnavDes] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // Setting date\r\n    var d = new Date(props.project.timestamp);\r\n    setprojectDates((prevState) => d.getMonth() + 1 + \".\" + d.getFullYear());\r\n    var localnavdes=\"\"\r\n    for(let i =0 ;i<110;i++)\r\n    {\r\n      if(props.project.navbardescription[0].text[i]===undefined)\r\n      break;\r\n      \r\n      localnavdes+=props.project.navbardescription[0].text[i]\r\n    }\r\n    setnavDes((prevState)=>`${localnavdes}...`)\r\n    return () => {};\r\n  }, []);\r\n  const navigate = (projectRoute) => {\r\n      // props.history.push(`/`)\r\n      window.location.href = `/#${projectRoute}`;\r\n  }\r\n  return (\r\n    <div className=\"about-nav-item-container-wrapper flex-col pointer\" onClick={(e)=>{navigate(props.project.title[0].text)}}>\r\n      <h2 className=\"f1-5 about-item-heading\">\r\n        <span style={{ flex: \"5\" }}>{props.project.title[0].text}</span>\r\n        <span className=\"item-date flex-end\"style={{ flex: \"1\" }}>{projectDates}</span>\r\n      </h2>\r\n      <p className=\"about-item-para\">\r\n      {navDes}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(AboutLeftNav);\r\n","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\AboutContent\\AboutContent.jsx",["115","116","117","118","119"],"import React, { useEffect, useState } from 'react'\r\nimport \"./AboutContent.css\"\r\nvar paragraphArr = [];\r\nconst AboutContent = (props) => {\r\n\r\n    const [paragraph, setParagraph] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        var paragraphArr = props.aboutContent.aboutdescription;\r\n\r\n        var link1 = props.aboutContent.link1;\r\n        var link2 = props.aboutContent.link2;\r\n        var link3 = props.aboutContent.link3;\r\n\r\n        setParagraph(paragraphArr)\r\n        return () => {\r\n            // console.log(\"CMD\")\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div >\r\n            {\r\n                paragraph.map(element => {\r\n                    console.log(element);\r\n                    return (\r\n                        <p>{element.text}</p>\r\n                    )\r\n                })\r\n            }\r\n\r\n            <div className=\"links\">\r\n                <a href={props.aboutContent.link1.url} target={props.aboutContent.link1.target}>Contact</a>\r\n                <a className=\"link2\" href={props.aboutContent.link2.url} target={props.aboutContent.link2.target}>IG</a>\r\n                <a className=\"link3\" href={props.aboutContent.link3.url} target={props.aboutContent.link3.target}>Music</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutContent\r\n","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\ProjectPageHeader\\ProjectPageHeader.jsx",[],"G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\MobileProject\\MobileProject.jsx",["120","121","122","123"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./MobileProject.css\";\r\n// import sstatic from \"./Assets/sstatic.PNG\";\r\nimport ImageCarousel from \"../ImageCarousel/ImageCarousel\";\r\n\r\nimport Prismic from '@prismicio/client'\r\nimport { Date, Link, RichText } from 'prismic-reactjs'\r\n\r\nconst apiEndpoint = \"https://portfolio-pedro.cdn.prismic.io/api/v2\";\r\nconst accessToken =\r\n  \"MC5ZQWM0NWhNQUFDWUFyN1RG.77-9O--_ve-_ve-_ve-_ve-_ve-_vQ3vv73vv73vv73vv73vv71Y77-9Be-_vSEBMe-_vU_vv73vv73vv71-bu-_ve-_ve-_vQQ\";\r\nconst client = Prismic.client(apiEndpoint, { accessToken });\r\n\r\n\r\n\r\n\r\nfunction MobileProject(props) {\r\n  const [itemColor, setitemColor] = useState(\"black\");\r\n  const [projectDates, setprojectDates] = useState(\"\");\r\n\r\n\r\n  \r\n  useEffect(() => {\r\n        // Setting date\r\n        var d = new Date(props.project.timestamp);\r\n        setprojectDates((prevState)=>(d.getMonth()+1) + '.' + d.getFullYear())\r\n    if (props.currentUrl === `/${props.project.title[0].text}`) setitemColor(\"blue\");\r\n    else setitemColor(\"black\");\r\n\r\n    return () => {\r\n    };\r\n  }, [props.currentUrl]);\r\n  return (\r\n      <div className=\"mobile-project-container-wrapper\">\r\n        <div className=\"mobile-project-container\">\r\n          <div className=\"mobile-project-container-headings\">\r\n            <div\r\n              className=\"flex-start mobile-project-heading\"\r\n              style={{ color: `${itemColor}` }}\r\n            >\r\n              {props.project.title[0].text}\r\n            </div>\r\n            <div className=\"f1-5 flex-end mobile-project-date\">\r\n              {projectDates}\r\n            </div>\r\n          </div>\r\n            <div className=\"mobile-project-container-content-left\">\r\n              <div className=\"mobile-project-container-content-left-img\">\r\n                <ImageCarousel Size={{width:\"100%\",height:\"270px\"}} projectId={props.project.title[0].text} projectimages={props.project.projectimages}/>\r\n              </div>\r\n              <div className=\"mobile-project-container-content-left-content\">\r\n                {\r\n                  props.project.description.map((para,index)=>{\r\n                    if(para.spans.length>0)\r\n                      return(\r\n                        <p style={{fontWeight:\"700\"}} key={index} className={para.type}>{para.text}</p>\r\n                      )\r\n                    else \r\n                    return(\r\n                      <p style={{fontWeight:\"400\"}} key={index} className={para.type}>{para.text}</p>\r\n                    )\r\n                  })\r\n                }\r\n              </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default MobileProject;\r\n\r\n","G:\\Task\\2021\\pedro\\projectjarvis\\src\\Components\\ImageCarousel\\ImageCarousel.jsx",["124","125","126"],"import React from \"react\";\r\nimport sstatic from \"./Assets/sstatic.PNG\";\r\nimport ScrollableSection, { ScrollableLink } from \"react-update-url-on-scroll\";\r\n\r\nfunction ImageCarousel(props) {\r\n  return (\r\n    // <ScrollableSection name={props.projectId}>\r\n      <div\r\n        id={props.projectId}\r\n        className=\"carousel slide\"\r\n        data-ride=\"carousel\"\r\n        data-interval={false}\r\n      >\r\n        <div className=\"carousel-inner\">\r\n          <div className=\"carousel-item active\">\r\n            <img\r\n              className=\"d-block\"\r\n              style={{ width: `${props.Size.width}`, height: `${props.Size.height}`, objectFit: \"fill\" }}\r\n              src={props.projectimages.url}\r\n              alt=\"First slide\"\r\n            />\r\n          </div>\r\n            <div className=\"carousel-item\">\r\n            <img\r\n              className=\"d-block\"\r\n              style={{ width: `${props.Size.width}`, height: `${props.Size.height}`, objectFit: \"fill\" }}\r\n              src={props.projectimages.second.url}\r\n              alt=\"Second slide\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"carousel-item\">\r\n            <img\r\n              className=\"d-block\"\r\n              style={{ width: `${props.Size.width}`, height: `${props.Size.height}`, objectFit: \"fill\" }}\r\n              src={props.projectimages.third.url}\r\n              alt=\"Third slide\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <a\r\n          className=\"carousel-control-prev\"\r\n          style={{ opacity: \"0\", cursor: \"e-resize\" }}\r\n          href={`#${props.projectId}`}\r\n          role=\"button\"\r\n          data-slide=\"prev\"\r\n        >\r\n          <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n          <span className=\"sr-only\">Previous</span>\r\n        </a>\r\n        <a\r\n          className=\"carousel-control-next\"\r\n          style={{ opacity: \"0\", cursor: \"e-resize\" }}\r\n          href={`#${props.projectId}`}\r\n          role=\"button\"\r\n          data-slide=\"next\"\r\n        >\r\n          <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n          <span className=\"sr-only\">Next</span>\r\n        </a>\r\n      </div>\r\n    // </ScrollableSection>\r\n  );\r\n}\r\n\r\nexport default ImageCarousel;\r\n",{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":20,"column":5,"nodeType":"133","messageId":"134","endLine":22,"endColumn":6},{"ruleId":"131","severity":1,"message":"132","line":30,"column":5,"nodeType":"133","messageId":"134","endLine":32,"endColumn":6},{"ruleId":"135","severity":1,"message":"136","line":37,"column":6,"nodeType":"137","endLine":37,"endColumn":28,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":99,"column":17,"nodeType":"141","endLine":99,"endColumn":112},{"ruleId":"139","severity":1,"message":"140","line":105,"column":17,"nodeType":"141","endLine":105,"endColumn":155},{"ruleId":"139","severity":1,"message":"140","line":128,"column":17,"nodeType":"141","endLine":128,"endColumn":112},{"ruleId":"139","severity":1,"message":"140","line":134,"column":17,"nodeType":"141","endLine":134,"endColumn":149},{"ruleId":"142","severity":1,"message":"143","line":5,"column":10,"nodeType":"144","messageId":"145","endLine":5,"endColumn":14},{"ruleId":"142","severity":1,"message":"146","line":5,"column":16,"nodeType":"144","messageId":"145","endLine":5,"endColumn":20},{"ruleId":"142","severity":1,"message":"147","line":5,"column":22,"nodeType":"144","messageId":"145","endLine":5,"endColumn":30},{"ruleId":"142","severity":1,"message":"148","line":17,"column":22,"nodeType":"144","messageId":"145","endLine":17,"endColumn":35},{"ruleId":"142","severity":1,"message":"149","line":22,"column":10,"nodeType":"144","messageId":"145","endLine":22,"endColumn":23},{"ruleId":"139","severity":1,"message":"140","line":87,"column":17,"nodeType":"141","endLine":87,"endColumn":112},{"ruleId":"139","severity":1,"message":"140","line":88,"column":17,"nodeType":"141","endLine":88,"endColumn":149},{"ruleId":"142","severity":1,"message":"150","line":2,"column":8,"nodeType":"144","messageId":"145","endLine":2,"endColumn":15},{"ruleId":"142","severity":1,"message":"143","line":7,"column":10,"nodeType":"144","messageId":"145","endLine":7,"endColumn":14},{"ruleId":"142","severity":1,"message":"146","line":7,"column":16,"nodeType":"144","messageId":"145","endLine":7,"endColumn":20},{"ruleId":"142","severity":1,"message":"147","line":7,"column":22,"nodeType":"144","messageId":"145","endLine":7,"endColumn":30},{"ruleId":"142","severity":1,"message":"151","line":8,"column":8,"nodeType":"144","messageId":"145","endLine":8,"endColumn":21},{"ruleId":"142","severity":1,"message":"152","line":16,"column":12,"nodeType":"144","messageId":"145","endLine":16,"endColumn":22},{"ruleId":"142","severity":1,"message":"148","line":16,"column":24,"nodeType":"144","messageId":"145","endLine":16,"endColumn":37},{"ruleId":"135","severity":1,"message":"153","line":36,"column":8,"nodeType":"137","endLine":36,"endColumn":10,"suggestions":"154"},{"ruleId":"142","severity":1,"message":"155","line":8,"column":5,"nodeType":"144","messageId":"145","endLine":8,"endColumn":11},{"ruleId":"142","severity":1,"message":"156","line":15,"column":10,"nodeType":"144","messageId":"145","endLine":15,"endColumn":21},{"ruleId":"135","severity":1,"message":"157","line":28,"column":6,"nodeType":"137","endLine":28,"endColumn":22,"suggestions":"158"},{"ruleId":"142","severity":1,"message":"159","line":3,"column":8,"nodeType":"144","messageId":"145","endLine":3,"endColumn":25},{"ruleId":"142","severity":1,"message":"160","line":3,"column":29,"nodeType":"144","messageId":"145","endLine":3,"endColumn":43},{"ruleId":"142","severity":1,"message":"161","line":11,"column":9,"nodeType":"144","messageId":"145","endLine":11,"endColumn":22},{"ruleId":"142","severity":1,"message":"156","line":16,"column":10,"nodeType":"144","messageId":"145","endLine":16,"endColumn":21},{"ruleId":"135","severity":1,"message":"162","line":36,"column":6,"nodeType":"137","endLine":36,"endColumn":24,"suggestions":"163"},{"ruleId":"142","severity":1,"message":"164","line":3,"column":8,"nodeType":"144","messageId":"145","endLine":3,"endColumn":15},{"ruleId":"142","severity":1,"message":"159","line":4,"column":8,"nodeType":"144","messageId":"145","endLine":4,"endColumn":25},{"ruleId":"142","severity":1,"message":"160","line":4,"column":29,"nodeType":"144","messageId":"145","endLine":4,"endColumn":43},{"ruleId":"142","severity":1,"message":"146","line":8,"column":16,"nodeType":"144","messageId":"145","endLine":8,"endColumn":20},{"ruleId":"142","severity":1,"message":"147","line":8,"column":22,"nodeType":"144","messageId":"145","endLine":8,"endColumn":30},{"ruleId":"142","severity":1,"message":"165","line":14,"column":7,"nodeType":"144","messageId":"145","endLine":14,"endColumn":13},{"ruleId":"135","severity":1,"message":"166","line":32,"column":5,"nodeType":"137","endLine":32,"endColumn":23,"suggestions":"167"},{"ruleId":"168","severity":1,"message":"169","line":75,"column":34,"nodeType":"170","messageId":"171","endLine":75,"endColumn":36},{"ruleId":"135","severity":1,"message":"162","line":23,"column":8,"nodeType":"137","endLine":23,"endColumn":10,"suggestions":"172"},{"ruleId":"135","severity":1,"message":"162","line":22,"column":6,"nodeType":"137","endLine":22,"endColumn":8,"suggestions":"173"},{"ruleId":"142","severity":1,"message":"174","line":3,"column":5,"nodeType":"144","messageId":"145","endLine":3,"endColumn":17},{"ruleId":"142","severity":1,"message":"175","line":12,"column":13,"nodeType":"144","messageId":"145","endLine":12,"endColumn":18},{"ruleId":"142","severity":1,"message":"176","line":13,"column":13,"nodeType":"144","messageId":"145","endLine":13,"endColumn":18},{"ruleId":"142","severity":1,"message":"177","line":14,"column":13,"nodeType":"144","messageId":"145","endLine":14,"endColumn":18},{"ruleId":"135","severity":1,"message":"178","line":20,"column":8,"nodeType":"137","endLine":20,"endColumn":10,"suggestions":"179"},{"ruleId":"142","severity":1,"message":"146","line":7,"column":16,"nodeType":"144","messageId":"145","endLine":7,"endColumn":20},{"ruleId":"142","severity":1,"message":"147","line":7,"column":22,"nodeType":"144","messageId":"145","endLine":7,"endColumn":30},{"ruleId":"142","severity":1,"message":"165","line":12,"column":7,"nodeType":"144","messageId":"145","endLine":12,"endColumn":13},{"ruleId":"135","severity":1,"message":"166","line":32,"column":6,"nodeType":"137","endLine":32,"endColumn":24,"suggestions":"180"},{"ruleId":"142","severity":1,"message":"164","line":2,"column":8,"nodeType":"144","messageId":"145","endLine":2,"endColumn":15},{"ruleId":"142","severity":1,"message":"159","line":3,"column":8,"nodeType":"144","messageId":"145","endLine":3,"endColumn":25},{"ruleId":"142","severity":1,"message":"160","line":3,"column":29,"nodeType":"144","messageId":"145","endLine":3,"endColumn":43},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'window.location.hash'. Either exclude it or remove the dependency array. Outer scope values like 'window.location.hash' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["183"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-unused-vars","'Date' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'RichText' is defined but never used.","'setcurrentUrl' is assigned a value but never used.","'contactIGLink' is assigned a value but never used.","'Project' is defined but never used.","'MobileNavItem' is defined but never used.","'currentUrl' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.match.params.uid'. Either include it or remove the dependency array.",["184"],"'scroll' is assigned a value but never used.","'activeState' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'window.scrollY'. Either exclude it or remove the dependency array. Outer scope values like 'window.scrollY' aren't valid dependencies because mutating them doesn't re-render the component.",["185"],"'ScrollableSection' is defined but never used.","'ScrollableLink' is defined but never used.","'executeScroll' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.project.navbardescription' and 'props.project.timestamp'. Either include them or remove the dependency array.",["186"],"'sstatic' is defined but never used.","'client' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.project.timestamp' and 'props.project.title'. Either include them or remove the dependency array.",["187"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["188"],["189"],"'paragraphArr' is assigned a value but never used.","'link1' is assigned a value but never used.","'link2' is assigned a value but never used.","'link3' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.aboutContent.aboutdescription', 'props.aboutContent.link1', 'props.aboutContent.link2', and 'props.aboutContent.link3'. Either include them or remove the dependency array.",["190"],["191"],"no-global-assign","no-unsafe-negation",{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"192","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"201","fix":"203"},{"desc":"204","fix":"205"},{"desc":"199","fix":"206"},"Update the dependencies array to be: []",{"range":"207","text":"208"},"Update the dependencies array to be: [props.match.params.uid]",{"range":"209","text":"210"},{"range":"211","text":"208"},"Update the dependencies array to be: [props.currentUrl, props.project.navbardescription, props.project.timestamp]",{"range":"212","text":"213"},"Update the dependencies array to be: [props.currentUrl, props.project.timestamp, props.project.title]",{"range":"214","text":"215"},"Update the dependencies array to be: [props.project.navbardescription, props.project.timestamp]",{"range":"216","text":"217"},{"range":"218","text":"217"},"Update the dependencies array to be: [props.aboutContent.aboutdescription, props.aboutContent.link1, props.aboutContent.link2, props.aboutContent.link3]",{"range":"219","text":"220"},{"range":"221","text":"215"},[1140,1162],"[]",[1645,1647],"[props.match.params.uid]",[897,913],[1292,1310],"[props.currentUrl, props.project.navbardescription, props.project.timestamp]",[1170,1188],"[props.currentUrl, props.project.timestamp, props.project.title]",[780,782],"[props.project.navbardescription, props.project.timestamp]",[728,730],[545,547],"[props.aboutContent.aboutdescription, props.aboutContent.link1, props.aboutContent.link2, props.aboutContent.link3]",[1073,1091]]